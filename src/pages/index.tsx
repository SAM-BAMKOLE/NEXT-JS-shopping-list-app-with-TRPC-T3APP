import Head from "next/head";
// import Link from "next/link";
import { useState } from "react";

import { api } from "@/utils/api";
import AddItem from "@/components/AddItem";

export default function Home() {
  const items = api.item.getItems.useQuery();
  const { mutateAsync: updateCheck } = api.item.checkItem.useMutation({
    onSettled: () => items.refetch(),
  });
  const { mutateAsync: deleteItem } = api.item.deleteItem.useMutation({
    onSettled: () => items.refetch(),
  });
  const [open, setOpen] = useState<boolean>(false);

  return (
    <>
      <Head>
        <title>Shopping List T3 App</title>
        <meta
          name="description"
          content="Shopping list app generated by create-t3-app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen bg-gradient-to-b from-[#2e026d] to-[#15162c] px-2 py-10 md:px-10">
        <div className="container mx-auto">
          <header className="flex items-center justify-between">
            <h1 className="text-3xl font-bold capitalize text-white">
              Shopping cart
            </h1>
            <button
              className="text-bold rounded-md bg-amber-400 px-3 py-1 text-2xl"
              onClick={() => setOpen(!open)}
            >
              {open ? "-" : "+"}
            </button>
          </header>
          <AddItem open={open} />
          <section>
            <ul>
              {items.isLoading ? (
                <h2 className="text-xl font-semibold text-white">
                  Fetching items..
                </h2>
              ) : !items.isLoading && items.data && items.data.length > 0 ? (
                items.data.map((item) => (
                  <li
                    className={`my-[.6rem] flex min-h-[80%] items-center justify-between rounded border-l-2 bg-white bg-opacity-20 px-3 py-2 ${item.checked ? "border-green-600" : "border-red-600"}`}
                    key={item.id}
                  >
                    <p
                      className="mr-4 cursor-pointer text-lg font-semibold text-white"
                      onClick={() =>
                        updateCheck({ checked: item.checked, itemId: item.id })
                      }
                    >
                      {item.name}
                    </p>
                    <button
                      className="font-semibold text-red-600"
                      onClick={() => deleteItem({ itemId: item.id })}
                    >
                      x
                    </button>
                  </li>
                ))
              ) : (
                <h2 className="text-xl font-semibold text-white">
                  No items found
                </h2>
              )}
            </ul>
          </section>
        </div>
      </main>
    </>
  );
}
